{"version":3,"sources":["serviceWorker.ts","common/constants.ts","common/state/storeState.ts","features/quiz/quizData.ts","common/state/Store.tsx","common/theme/colors.ts","common/theme/typography.ts","common/theme/variants.ts","common/theme/theme.ts","features/home/Difficulty/Difficulty.tsx","common/components/Html/Html.tsx","common/components/Progress/Progress.tsx","common/components/Result/Result.tsx","common/components/Ring/Ring.tsx","common/components/Spinner/Spinner.tsx","features/home/QuestionCount/QuestionCount.tsx","features/home/Home.view.tsx","features/quiz/AnswerButton/AnswerButton.tsx","features/quiz/Question/Question.tsx","features/quiz/Results/Result.tsx","features/quiz/quizUtils.ts","features/quiz/Results/Results.tsx","index.tsx","features/quiz/Quiz.view.tsx"],"names":["Boolean","window","location","hostname","match","DIFFICULTY","initQuizState","error","isLoading","answers","questions","currentQuestion","mockQuizState","repeat","QUESTION_COUNT_INCREMENT","category","type","difficulty","question","correct_answer","incorrect_answers","initQuizSettingsState","questionCount","previousQuestionCount","initState","mockState","merge","flip","unflippedMerge","difficultyToNumber","indexOf","reducer","state","actionType","payload","actionMap","RESET_QUIZ_STATE","ANSWER_QUESTION","evolve","append","inc","INCREASE_DIFFICULTY","length","DECREASE_DIFFICULTY","INCREASE_QUESTION_COUNT","Math","min","DECREASE_QUESTION_COUNT","max","UPDATE_SETTINGS","settings","FETCH_QUESTIONS","FETCH_QUESTIONS_ERROR","FETCH_QUESTIONS_SUCCESS","propOr","always","actionHandler","store","createContext","dispatch","colors","background","primary","secondary","faded","grey","correct","incorrect","DEFAULT_FONTS","typography","fonts","body","heading","monospace","fontSizes","fontWeights","light","regular","semi","bold","variants","buttons","borderColor","borderStyle","borderWidth","backgroundColor","borderRadius","boxShadow","color","cursor","fontFamily","fontSize","fontWeight","transition","width","position","zIndex","transparent","m","p","content","alignItems","flex","flexDirection","justifyContent","footer","alignSelf","pb","header","px","py","wrapper","maxHeight","theme","breakpoints","shadows","default","hover","space","buttonStyle","mx","top","Difficulty","useContext","onClick","sx","variant","textAlign","textTransform","Html","html","dangerouslySetInnerHTML","__html","Progress","children","current","total","height","mt","Tick","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Cross","Ring","React","memo","count","previousCount","thickness","spinner","percent","previousPercent","normalizedRadius","size","circumference","PI","offset","previousOffset","animation","keyframes","Circle","styled","viewBox","style","transform","id","x1","y1","x2","y2","stopColor","strokeDasharray","fill","r","cx","cy","fade","spin","Spinner","bottom","left","right","QuestionCount","my","appNameStyles","mb","textShadow","AnswerButton","xmlns","filter","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","values","dy","stdDeviation","mode","in2","TrueButton","FalseButton","Question","hyphens","overflowWrap","Result","is_correct","given_answer","mr","checkAnswer","answer","Results","results","zipWith","toResults","score","overflowY","map","i","key","toRgba","hex","alpha","hex2rgb","rgb","g","b","Fade","styles","inner","maxWidth","minWidth","outer","ReactDOM","render","useMocks","useReducer","Provider","value","path","useEffect","fetch","then","res","json","data","catch","err","toUpperCase","to","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"sNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oFClBOC,EAAa,CAAC,OAAQ,SAAU,QCsBhCC,EAA2B,CACtCC,MAAO,KACPC,WAAW,EACXC,QAAS,GACTC,UAAW,GACXC,gBAAiB,GAGbC,EAA2B,CAC/BL,MAAO,KACPC,WAAW,EACXC,QAASI,YAAO,QAbIC,IAcpBJ,UChCmC,CACnC,CACEK,SAAU,mBACVC,KAAM,UACNC,WAAY,OACZC,SACE,6EAEFC,eAAgB,OAChBC,kBAAmB,CAAC,UAEtB,CACEL,SAAU,6BACVC,KAAM,UACNC,WAAY,OACZC,SACE,4EACFC,eAAgB,QAChBC,kBAAmB,CAAC,SAEtB,CACEL,SAAU,6BACVC,KAAM,UACNC,WAAY,OACZC,SACE,kGACFC,eAAgB,OAChBC,kBAAmB,CAAC,UAEtB,CACEL,SAAU,6BACVC,KAAM,UACNC,WAAY,OACZC,SACE,kIACFC,eAAgB,OAChBC,kBAAmB,CAAC,UAEtB,CACEL,SAAU,mBACVC,KAAM,UACNC,WAAY,OACZC,SACE,uEACFC,eAAgB,OAChBC,kBAAmB,CAAC,UAEtB,CACEL,SAAU,oBACVC,KAAM,UACNC,WAAY,OACZC,SACE,kHACFC,eAAgB,OAChBC,kBAAmB,CAAC,UAEtB,CACEL,SAAU,uBACVC,KAAM,UACNC,WAAY,OACZC,SACE,6IACFC,eAAgB,QAChBC,kBAAmB,CAAC,SAEtB,CACEL,SAAU,WACVC,KAAM,UACNC,WAAY,OACZC,SACE,6GACFC,eAAgB,QAChBC,kBAAmB,CAAC,SAEtB,CACEL,SAAU,YACVC,KAAM,UACNC,WAAY,OACZC,SAAU,uDACVC,eAAgB,OAChBC,kBAAmB,CAAC,UAEtB,CACEL,SAAU,uBACVC,KAAM,UACNC,WAAY,OACZC,SACE,oEACFC,eAAgB,OAChBC,kBAAmB,CAAC,WDxDtBT,gBAAiB,GAWbU,EAA2C,CAC/CJ,WAAY,SACZK,cA5BoBR,GA6BpBS,sBA7BoBT,IAoCTU,EAAqB,eAC7BlB,EAD6B,GAE7Be,GAGQI,EAAqB,eAC7Bb,EAD6B,GAE7BS,GEtCCK,EAAQC,YAAKC,KAENC,EAAqB,SAACZ,GAAD,OAChCZ,EAAWyB,QAAQb,IAERc,EAA6C,SACxDC,EADwD,GAGpD,IAAD,mBADFC,EACE,KADUC,EACV,KACGC,EAAY,CAEhBC,iBAAkBV,EAAMpB,GACxB+B,gBAAiBC,YAAO,CACtB7B,QAAS8B,YAAOL,GAChBvB,gBAAiB6B,MAInBC,oBAAqBf,EAAM,CACzBT,WACEZ,EACEwB,EAAmBG,EAAMf,YAAc,EAAIZ,EAAWqC,OAClDb,EAAmBG,EAAMf,YAAc,EACvC,KAGV0B,oBAAqBjB,EAAM,CACzBT,WACEZ,GACGwB,EAAmBG,EAAMf,YAAc,EACpCY,EAAmBG,EAAMf,YACzBZ,EAAWqC,QAAU,KAG/BE,wBAAyBlB,EAAM,CAC7BJ,cAAeuB,KAAKC,IAClBd,EAAMV,cH1C0B,EACNR,IG4C5BS,sBAAuBS,EAAMV,gBAE/ByB,wBAAyBrB,EAAM,CAC7BJ,cAAeuB,KAAKG,IAClBhB,EAAMV,cHjD0B,KGoDlCC,sBAAuBS,EAAMV,gBAI/B2B,gBAAiBX,YAAO,CAAEY,SAAUxB,EAAMQ,KAG1CiB,gBAAiBzB,EAAM,CAAElB,WAAW,IACpC4C,sBAAuB1B,EAAM,CAC3BlB,WAAW,EACXD,MAAO2B,IAETmB,wBAAyB3B,EAAM,CAC7BlB,WAAW,EACXD,MAAO,KACPG,UAAWwB,KAUf,OANyDoB,YACvDC,IACAtB,EACAE,EAGKqB,CAAcxB,IAKVyB,EAAQC,wBAAc,CAAE1B,MAAOR,EAAWmC,SA9Ed,eCvB5BC,EAAS,CACpBC,WAAY,UACZC,QAAS,UACTC,UAAW,UACXC,MAAO,UACPC,KAAM,UACNC,QAAS,UACTC,UAAW,WCPPC,EACJ,iGAmBWC,EAAa,CACxBC,MAlBY,CACZC,KAAK,YAAD,OAAcH,GAClBI,QAAQ,YAAD,OAAcJ,GACrBK,UAAW,oBAgBXC,UAbgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAcjDC,YAZkB,CAClBJ,KAAM,IACNC,QAAS,IACTI,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,KAAM,MCiBKC,EAAW,CACtBC,QAnCc,CACdnB,QAAS,CACPoB,YAAa,UACbC,YAAa,QACbC,YAAa,EACbC,gBAAiB,UACjBC,aAAc,KACdC,UAAW,UACXC,MAAO,aACPC,OAAQ,UACRC,WAAY,OACZC,SAAU,EACVC,WAAY,OACZC,WAAY,kCACZC,MAAO,OACP,UAAW,CACTT,gBAAiB,aACjBG,MAAO,YAGXlE,cAAe,CACbmE,OAAQ,UACRJ,gBAAiB,aACjBU,SAAU,WACVC,OAAQ,GAEVC,YAAa,CACXZ,gBAAiB,cACjBI,OAAQ,UACRS,EAAG,EACHC,EAAG,IAMLC,QAAS,CACPC,WAAY,SACZC,KAAM,EACNC,cAAe,SACfC,eAAgB,SAChBL,EAAG,GAELM,OAAQ,CACNC,UAAW,SACXZ,MAAO,MACPa,GAAI,GAENC,OAAQ,CACNF,UAAW,UACXG,GAAI,EACJC,GAAI,GAENC,QAAS,CACPV,WAAY,SACZC,KAAM,EACNC,cAAe,SACfS,UAAW,UC3CFC,EAAK,aAChBC,YAXkB,CAAC,OAAQ,OAAQ,OAAQ,QAY3CtD,SACAuD,QATc,CACdC,QAAS,8BACTC,MAAO,uCAQPC,MAZY,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAavCjD,EALa,GAMbW,GCfCuC,EAA2B,CAC/B9B,OAAQ,UACR+B,GAAI,EACJrB,EAAG,EACHJ,SAAU,WACV0B,IAAK,OAGMC,EAAuB,WAAO,IAAD,EACZC,qBAAWlE,GAA/BzB,EADgC,EAChCA,MAAO2B,EADyB,EACzBA,SACP1C,EAAee,EAAff,WAER,OACE,kBAAC,IAAD,CAAMoF,WAAW,SAASG,eAAe,UACvC,kBAAC,IAAD,CACEoB,QAAS,kBAAMjE,EAAS,CAAC,yBACzBkE,GAAIN,EACJO,QAAQ,eAER,kBAAC,IAAD,CAAMnC,SAAU,GAAhB,WAEF,kBAAC,IAAD,CACEkC,GAAI,CACFrC,MAAO,UACPE,WAAY,OACZC,SAAU,EACVC,WAAY,OACZM,EAAG,EACHC,EAAG,EACH4B,UAAW,SACXC,cAAe,YACflC,MAAO,SAGR7E,GAEH,kBAAC,IAAD,CACE2G,QAAS,kBAAMjE,EAAS,CAAC,yBACzBkE,GAAIN,EACJO,QAAQ,eAER,kBAAC,IAAD,CAAMnC,SAAU,GAAhB,aC1CKsC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,yBAAKC,wBAAyB,CAAEC,OAAQF,MCI7BG,EAAoC,SAAC,GAAD,IAC/CC,EAD+C,EAC/CA,SACAC,EAF+C,EAE/CA,QACAC,EAH+C,EAG/CA,MAH+C,OAK/C,kBAAC,IAAD,CAAMjC,cAAc,SAASM,GAAI,GAC/B,kBAAC,IAAD,CAAMgB,GAAI,CAAExC,gBAAiB,QAASoD,OAAQ,EAAG3C,MAAO,SACtD,kBAAC,IAAD,CACE+B,GAAI,CACFY,OAAQ,EACRpD,gBAAiB,WAEnBS,MAAOyC,EAAUC,KAGrB,kBAAC,IAAD,CACE9B,UAAU,SACVhB,WAAW,OACXC,SAAU,EACVC,WAAW,OACX8C,GAAI,EACJX,UAAU,QACVvC,MAAM,WAEL8C,KCzBMK,EAAwB,SAAC,GAAD,QAAGnD,aAAH,MAAW5B,EAAOE,QAAlB,SACnC,0BACE8E,EAAE,mDACFC,OAAQrD,EACRsD,YAAY,IACZC,cAAc,QACdC,eAAe,WAINC,EAAyB,SAAC,GAAD,QAAGzD,aAAH,MAAW5B,EAAOE,QAAlB,SACpC,oCACE,0BACE8E,EAAE,mCACFC,OAAQrD,EACRsD,YAAY,IACZC,cAAc,QACdC,eAAe,UAEjB,0BACEJ,EAAE,mCACFC,OAAQrD,EACRsD,YAAY,IACZC,cAAc,QACdC,eAAe,Y,+bClBd,IAAME,EAA4BC,IAAMC,MAC7C,YAMkB,IAAD,IALfC,aAKe,MALP,GAKO,MAJfC,qBAIe,MAJC,GAID,MAHfd,aAGe,MAHP,GAGO,MAFfe,iBAEe,MAFH,EAEG,MADfC,eACe,SACTC,EAAUJ,EAAQb,EAClBkB,EAAkBJ,EAAgBd,EAIlCmB,EADSC,GAC+B,EAAZL,EAC5BM,EAAmC,EAAnBF,EAAuB9G,KAAKiH,GAE5CC,EAASF,EAAgBJ,EAAUI,EACnCG,EAAiBH,EAAgBH,EAAkBG,EAEnDI,EAAYC,YAAH,IAEQF,EAGAD,GAIjBI,EAASC,kBAAO,SAAPA,CAAH,IACAxG,EAAOE,QACG+F,EAAiBA,EAChBE,EACRE,EACGV,GAIlB,OACE,yBACEc,QAAO,cA5BE,IA4BF,YA5BE,KA6BTC,MAAO,CAAEC,UAAW,oBAEpB,8BACE,oCAAgBC,GAAG,UAAUC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACtD,0BAAMb,OAAO,KAAKc,UAAU,wBAC5B,0BAAMd,OAAO,OAAOc,UAAU,0BAGlC,4BACEhC,OAAQW,EAAU,gBAAkB5F,EAAOI,MAC3C8G,gBAAe,UAAKjB,EAAL,YAAsBA,GACrCf,YAAaS,EACbwB,KAAK,cACLC,EAAGrB,EACHsB,GAAG,MACHC,GAAG,SAEH1B,GAAW,kBAACW,EAAD,CAAQa,EAAGrB,EAAkBsB,GAAG,MAAMC,GAAG,Y,6PCjE9D,IAEMC,EAAOjB,YAAH,KASJkB,EAAOlB,YAAH,KAMGmB,EAAoB,kBAC/B,kBAAC,IAAD,CACExD,GAAI,CACF9B,SAAU,WACV0B,IAAK,EACL6D,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPnF,WAAY,SACZG,eAAgB,SAChBR,OAAQ,GACRiE,UAAU,GAAD,OAAKkB,EAAL,wBAGX,kBAAC,IAAD,CACEtD,GAAI,CACFY,OAjCS,IAkCT3C,MAlCS,IAmCTmE,UAAU,GAAD,OAAKmB,EAAL,uBACTrF,SAAU,WACV0B,IAAK,IAGP,kBAACyB,EAAD,CAAMM,SAAO,OCvCNiC,EAAgB,WAAO,IAAD,EACL9D,qBAAWlE,GAA/BzB,EADyB,EACzBA,MAAO2B,EADkB,EAClBA,SACPrC,EAAyCU,EAAzCV,cAAeC,EAA0BS,EAA1BT,sBAMvB,OACE,kBAAC,IAAD,CAAMiF,eAAe,SAASH,WAAW,SAASqF,GAAI,GACpD,kBAAC,IAAD,CACE5D,QAAQ,gBACRF,QAAS,kBAAMjE,EAAS,CAAC,6BACzBkE,GAAI,CAAEY,OATO,GASa3C,MATb,GASgC0F,OARlC,IACS,MASpB,kBAAC,IAAD,CAAM5F,WAAW,OAAOD,SAAU,GAAlC,MAIF,kBAAC,IAAD,CAAKkC,GAAI,CAAE9B,SAAU,WAAY0C,OAdpB,IAcsC3C,MAdtC,MAeX,kBAAC,IAAD,CAAKQ,KAAM,GACT,kBAAC4C,EAAD,CACEG,MAAO/H,EACPgI,cAAe/H,EACfiH,MdXsB1H,Mcc1B,kBAAC,IAAD,CACE+G,GAAI,CACFxB,WAAY,SACZiF,OAAQ,EACRhF,KAAM,EACNE,eAAgB,SAChB+E,KAAM,EACNxF,SAAU,WACVyF,MAAO,EACP/D,IAAK,IAGP,kBAAC,IAAD,CAAM/B,WAAW,OAAOC,SAAU,EAAGH,MAAM,WACxClE,KAIP,kBAAC,IAAD,CACEsG,QAAS,kBAAMjE,EAAS,CAAC,6BACzBmE,QAAQ,gBACRD,GAAI,CAAEY,OA3CO,GA2Ca3C,MA3Cb,GA2CgCyF,MA1ClC,IACS,MA2CpB,kBAAC,IAAD,CAAM3F,WAAW,OAAOD,SAAU,GAAlC,QChDFgG,GAA6B,CACjCnG,MAAO,UACPG,SAAU,EACVC,WAAY,OACZgG,IAAK,EACL7D,UAAW,SACX8D,WAAY,WCTRC,GAAyB,SAAC,GAAD,IAAGxD,EAAH,EAAGA,SAAH,OAC7B,yBAAK+B,QAAQ,YAAYU,KAAK,OAAOgB,MAAM,8BACzC,uBAAGC,OAAO,mBACR,4BAAQf,GAAG,KAAKC,GAAG,KAAKF,EAAE,KAAKnC,OAAQjF,EAAOE,QAASgF,YAAY,OAEpER,EACD,8BACE,4BACEkC,GAAG,YACHyB,EAAE,IACFC,EAAE,IACFpG,MAAM,KACN2C,OAAO,KACP0D,YAAY,iBACZC,0BAA0B,QAE1B,6BAASC,aAAa,IAAIC,OAAO,uBACjC,mCACEC,GAAG,cACHvL,KAAK,SACLwL,OAAO,8CAET,8BAAUC,GAAG,MACb,oCAAgBC,aAAa,MAC7B,mCACE1L,KAAK,SACLwL,OAAO,+CAET,6BACEG,KAAK,SACLC,IAAI,qBACJN,OAAO,uBAET,6BACEK,KAAK,SACLJ,GAAG,gBACHK,IAAI,qBACJN,OAAO,cAOJO,GAAa,kBACxB,kBAAC,GAAD,KACE,kBAAC,EAAD,QAISC,GAAc,kBACzB,kBAAC,GAAD,KACE,kBAAC,EAAD,QClDSC,GAAqB,WAAO,IAAD,EACVpF,qBAAWlE,GAA/BzB,EAD8B,EAC9BA,MAAO2B,EADuB,EACvBA,SACU4E,EAAuBvG,EAAxCrB,gBAA0BD,EAAcsB,EAAdtB,UAFI,EAIPA,EAAU6H,GAAjCxH,EAJ8B,EAI9BA,SAAUG,EAJoB,EAIpBA,SACZsH,EAAQ9H,EAAUgC,OAExB,OACE,kBAAC,IAAD,CAAM6D,cAAc,SAASD,KAAM,GACjC,kBAAC,IAAD,CAAKwB,QAAQ,UACX,kBAAC,IAAD,CAASnC,SAAU,EAAGoC,UAAU,SAAS6D,GAAI,EAAGpG,MAAM,WACnDzE,GAEH,kBAAC,EAAD,CACEwH,QAASA,EACTC,MAAOA,EACPF,SAAQ,UAAKC,EAAL,YAAgBC,MAG5B,kBAAC,IAAD,CAAKV,QAAQ,WACX,kBAAC,IAAD,CAAMxB,KAAM,EAAGJ,EAAG,GAChB,kBAAC,IAAD,CACE2B,GAAI,CACFnC,WAAY,OACZF,MAAO,UACPG,SAAU,CAAC,EAAG,GACdqH,QAAS,OACTC,aAAc,eAGhB,kBAAC,EAAD,CAAM/E,KAAMhH,OAIlB,kBAAC,IAAD,CAAM4G,QAAQ,SAAStB,eAAe,iBACpC,kBAAC,IAAD,CACEsB,QAAQ,cACRF,QAAS,kBAAMjE,EAAS,CAAC,kBAAmB,WAE5C,kBAAC,IAAD,CAAKmC,MAAO,IACV,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CACEgC,QAAQ,cACRF,QAAS,kBAAMjE,EAAS,CAAC,kBAAmB,YAE5C,kBAAC,IAAD,CAAKmC,MAAO,IACV,kBAAC,GAAD,W,SChDCoH,GAAmC,SAAC,GAAD,IAC9ChM,EAD8C,EAC9CA,SACAiM,EAF8C,EAE9CA,WACAC,EAH8C,EAG9CA,aACAjM,EAJ8C,EAI9CA,eAJ8C,OAM9C,kBAAC,IAAD,CAAMgF,EAAG,EAAGD,EAAE,OAAOJ,MAAM,QACzB,kBAAC,IAAD,CAAKA,MAAO,GAAIuH,GAAI,EAAG3G,UAAU,UAC9ByG,EAAa,kBAAC,GAAD,MAAiB,kBAAC,GAAD,OAEjC,kBAAC,IAAD,CAAM7G,KAAM,EAAGC,cAAc,SAASC,eAAe,gBAAgBkF,GAAI,GACvE,kBAAC,IAAD,CAAKpF,KAAM,GACT,kBAAC,IAAD,CAAMZ,WAAW,OAAOF,MAAM,WAC5B,kBAAC,EAAD,CAAM0C,KAAMhH,MAGhB,kBAAC,IAAD,CAAKwH,GAAI,GACP,kBAAC,IAAD,CACEb,GAAI,CACFrC,MAAO,UACPE,WAAY,OACZC,SAAU,EACVqC,cAAe,cAGhBmF,EAAa,OAAS,UARzB,WAQ4C,IAC1C,gCAASA,EAAaC,EAAejM,Q,SC7BzCmM,GAAc,SAACpM,EAAoBqM,GAArB,sBACfrM,EADe,CAElBkM,aAAcG,EACdJ,WAAYjM,EAASC,iBAAmBoM,KCI7BC,GAAoB,WAAO,IAAD,EAIjC7F,qBAAWlE,GAJsB,IAEnCzB,MAAStB,EAF0B,EAE1BA,UAAWD,EAFe,EAEfA,QACpBkD,EAHmC,EAGnCA,SAGI8J,EDPiB,SAAC/M,EAAuBD,GAAxB,OACvBiN,aAAQJ,GAAa5M,EAAWD,GCMhBkN,CAAUjN,EAAWD,GAC/BmN,EAAQH,EAAQzB,QAAO,SAACM,GAAD,OAA4BA,EAAOa,cAC7DzK,OACG8F,EAAQ9H,EAAUgC,OAExB,OACE,kBAAC,IAAD,CAAMoF,QAAQ,WACZ,kBAAC,IAAD,CAAKA,QAAQ,SAASD,GAAI,CAAE9B,SAAU,aACpC,kBAAC,IAAD,CAASJ,SAAU,EAAGoC,UAAU,SAAS6D,GAAI,EAAGpG,MAAM,WACnDoI,EAAQpF,GAAS,GAAM,YAAc,wBADxC,KAGA,kBAAC,EAAD,CAAUD,QAASqF,EAAOpF,MAAOA,GAC/B,mDACe,IACb,gCACGoF,EADH,IACWpF,GACD,IAJZ,wBAQF,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAMjC,cAAc,SAASsH,UAAU,SAASrG,GAAI,CAAC,EAAG,EAAG,IACxDiG,EAAQK,KAAI,SAACxB,EAAwByB,GAAzB,OACX,kBAAC,GAAD,eAAQC,IAAKD,GAAOzB,QAGxB,kBAAC,IAAD,CAAKxE,QAAQ,SAASD,GAAI,CAAE9B,SAAU,aACpC,kBAAC,GAAD,CAAMpE,MAAI,IACV,kBAAC,IAAD,CAAQiG,QAAS,kBAAMjE,EAAS,CAAC,sBAAsBwC,EAAG,GAA1D,kBAUF8H,GAAS,SAACC,EAAaC,GAA2B,IAAD,cACnCC,GAAQF,GAAKG,IADsB,GAC9CrD,EAD8C,KAC3CsD,EAD2C,KACxCC,EADwC,KAErD,MAAM,QAAN,OAAevD,EAAf,YAAoBsD,EAApB,YAAyBC,EAAzB,YAA8BJ,EAA9B,MAGIK,GAAqC,SAAC,GAAD,IAAG7M,EAAH,EAAGA,KAAH,OACzC,kBAAC,IAAD,CACEkG,GAAI,CACFhE,WAAW,mBAAD,OAAqBlC,EAAO,IAAM,EAAlC,gBAA2CsM,GACnDrK,EAAOC,WACP,GAFQ,gBAGDoK,GAAOrK,EAAOC,WAAY,GAHzB,UAIVyH,OAAQ3J,EAAO,WAdD,GAed8F,IAAK9F,GAfS,GAea,UAC3B8G,OAhBc,GAiBd1C,SAAU,WACVO,KAAM,EACNR,MAAO,WC5DP2I,GAAyC,CAC7CC,MAAO,CACLpI,KAAM,IACNmC,OAAQ,OACRvC,EAAG,SACHc,UAAW,OACX2H,SAAU,CAAC,UAAW,MAAO,QAC7BC,SAAU,QAEZC,MAAO,CACLxI,WAAY,SACZiF,OAAQ,EACRC,KAAM,EACNxF,SAAU,WACVyF,MAAO,EACP/D,IAAK,IAITqH,IAASC,OACP,kBAAC,IAAD,CAAMlH,GAAI4G,GAAOI,OACf,kBAAC,IAAD,CAAMhH,GAAI4G,GAAOC,OACf,kBAAC,IAAD,CAAezH,MAAOA,GACpB,mBlBmEuD,SAAC,GAGzD,IAAD,IAFJ+H,gBAEI,SADJ1G,EACI,EADJA,SACI,EACsB2G,qBACxBlN,EACAiN,EAAWvN,EAAYD,GAHrB,mBACGQ,EADH,KACU2B,EADV,KAMJ,OACE,kBAACF,EAAMyL,SAAP,CAAgBC,MAAO,CAAEnN,QAAO2B,aAAa2E,KkB7EzC,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8G,KAAK,SACV,mBChCc,WAAO,IAAD,EACNzH,qBAAWlE,GAA/BzB,EAD0B,EAC1BA,MAAO2B,EADmB,EACnBA,SACPrC,EAA0DU,EAA1DV,cAAeL,EAA2Ce,EAA3Cf,WAAYN,EAA+BqB,EAA/BrB,gBAAiBD,EAAcsB,EAAdtB,UAcpD,OAJA2O,qBAAU,WACH3O,EAAUgC,QARf4M,MAAM,sCAAD,OACmChO,EADnC,uBAC+DL,EAD/D,kBAGFsO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI/L,EAAS,CAAC,0BAA2B+L,EAAKjC,aACvDkC,OAAM,SAAAC,GAAG,OAAIjM,EAAS,CAAC,wBAAyBiM,UAMhDlP,EAAUgC,OAGb,kBAAC,IAAD,CAAM4D,KAAM,GACT3F,IAAoBD,EAAUgC,OAAS,kBAAC,GAAD,MAAc,kBAAC,GAAD,OAJ5B,kBAAC,EAAD,QDgBhB,OAEF,kBAAC,IAAD,CAAO0M,KAAK,KACV,mBN1Bc,WAAO,IAAD,EACNzH,qBAAWlE,GAA/BzB,EAD0B,EAC1BA,MAAO2B,EADmB,EACnBA,SAEX3B,EAAMtB,UAAUgC,QAAQiB,EAAS,CAAC,qBAHJ,IAK1BrC,EAA8BU,EAA9BV,cAAeL,EAAee,EAAff,WAEvB,OACE,kBAAC,IAAD,CAAM6G,QAAQ,WACZ,kBAAC,IAAD,CAAKA,QAAQ,SAASY,GAAI,GACxB,kBAAC,IAAD,CAASb,GAAI8D,IAAb,aACA,kBAAC,IAAD,CAAS9D,GAAI8D,GAAehG,SAAU,GAAtC,cAIF,kBAAC,IAAD,CAAMmC,QAAQ,WACZ,kBAAC,IAAD,CAAKxB,KAAM,IACX,kBAAC,IAAD,CAAMD,WAAW,SAASE,cAAc,UACtC,kBAAC,IAAD,CAAMf,MAAM,UAAUE,WAAW,OAAOE,WAAW,QAAnD,qBAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAMU,KAAM,EAAGE,eAAe,SAASD,cAAc,UACnD,kBAAC,IAAD,CACEb,WAAW,OACXC,SAAU,EACVO,EAAG,EACH0F,GAAI,EACJ7D,UAAU,SACVvC,MAAM,WANR,8BAQ8BlE,EAC5B,6BACCL,EAAW4O,cAVd,8BAcJ,kBAAC,IAAD,CAAK/H,QAAQ,UACX,kBAAC,IAAD,CAAMgI,GAAG,SACP,kBAAC,IAAD,CAAQ3J,EAAG,GAAX,cMfM,aAQd4J,SAASC,eAAe,StBwFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBZ,MAAK,SAAAa,GACJA,EAAaC,gBAEdV,OAAM,SAAApP,GACL+P,QAAQ/P,MAAMA,EAAMgQ,c","file":"static/js/main.3dff1236.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const DIFFICULTY = [\"easy\", \"medium\", \"hard\"] as const;\nexport type Difficulty = typeof DIFFICULTY[number];\n\nexport type Answer = \"True\" | \"False\";\n\nexport type Question = {\n  category: string;\n  type: string;\n  difficulty: string;\n  question: string;\n  correct_answer: Answer;\n  incorrect_answers: Answer[];\n};\n\nexport type QuestionResult = Question & {\n  is_correct: boolean;\n  given_answer: Answer;\n};\n\nexport const QUESTION_COUNT_INCREMENT = 5;\nexport const MAX_QUESTION_COUNT = QUESTION_COUNT_INCREMENT * 10;\nexport const MIN_QUESTION_COUNT = QUESTION_COUNT_INCREMENT;\n","import { repeat } from \"ramda\";\n\nimport {\n  Answer,\n  Question,\n  Difficulty,\n  QUESTION_COUNT_INCREMENT,\n} from \"../constants\";\nimport { questions as mockQuestions } from \"../../features/quiz/quizData\";\n\n// Quiz State\n\nexport type QuizState = {\n  error: string | null;\n  isLoading: boolean;\n  answers: Answer[];\n  questions: Question[];\n  currentQuestion: number;\n};\n\nconst questionCount = QUESTION_COUNT_INCREMENT * 2;\n\nexport const initQuizState: QuizState = {\n  error: null,\n  isLoading: false,\n  answers: [],\n  questions: [],\n  currentQuestion: 0,\n};\n\nconst mockQuizState: QuizState = {\n  error: null,\n  isLoading: false,\n  answers: repeat(\"False\", questionCount) as Answer[],\n  questions: mockQuestions,\n  currentQuestion: 0,\n};\n\n// Quiz Settings State\n\ntype QuizSettingsState = {\n  difficulty: Difficulty;\n  questionCount: number;\n  previousQuestionCount: number;\n};\n\nconst initQuizSettingsState: QuizSettingsState = {\n  difficulty: \"medium\",\n  questionCount,\n  previousQuestionCount: questionCount,\n};\n\n// Store State\n\nexport type StoreState = QuizState & QuizSettingsState;\n\nexport const initState: StoreState = {\n  ...initQuizState,\n  ...initQuizSettingsState,\n};\n\nexport const mockState: StoreState = {\n  ...mockQuizState,\n  ...initQuizSettingsState,\n};\n","import { Question } from \"../../common/constants\";\n\nexport const questions: Question[] = [\n  {\n    category: \"Science & Nature\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"Hippopotomonstrosesquippedaliophobia is the irrational fear of long words.\",\n    // \"It was once believed that injecting shark cartilage into people would prevent them from contracting cancer.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n  {\n    category: \"Entertainment: Video Games\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"The first &quot;Metal Gear&quot; game was released for the PlayStation 1.\",\n    correct_answer: \"False\",\n    incorrect_answers: [\"True\"],\n  },\n  {\n    category: \"Entertainment: Video Games\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"In &quot;Portal 2&quot;, Cave Johnson started out Aperture Science as a shower curtain company.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n  {\n    category: \"Entertainment: Video Games\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"In &quot;Metal Gear Solid 2&quot;, you will see through the eyes of Psycho Mantis if you go first person during his boss fight.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n  {\n    category: \"Science & Nature\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"The value of one Calorie is different than the value of one calorie.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n  {\n    category: \"General Knowledge\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"Stagecoach owned &quot;South West Trains&quot; before losing the rights to FirstGroup and MTR in March of 2017.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n  {\n    category: \"Science: Mathematics\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"L&#039;H&ocirc;pital was the mathematician who created the homonymous rule that uses derivatives to evaluate limits with indeterminations.\",\n    correct_answer: \"False\",\n    incorrect_answers: [\"True\"],\n  },\n  {\n    category: \"Politics\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"George Clinton, Vice President of the United States (1805-1812), is an ancestor of President Bill Clinton.\",\n    correct_answer: \"False\",\n    incorrect_answers: [\"True\"],\n  },\n  {\n    category: \"Mythology\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question: \"Janus was the Roman god of doorways and passageways.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n  {\n    category: \"Entertainment: Music\",\n    type: \"boolean\",\n    difficulty: \"hard\",\n    question:\n      \"The singer Billie Holiday was also known as &quot;Lady Day&quot;.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n];\n","import React, { createContext, useReducer } from \"react\";\nimport {\n  always,\n  propOr,\n  evolve,\n  append,\n  merge as unflippedMerge,\n  flip,\n  inc,\n} from \"ramda\";\n\nimport { initQuizState, initState, mockState, StoreState } from \"./storeState\";\nimport { Action } from \"./actions\";\nimport {\n  Difficulty,\n  DIFFICULTY,\n  MAX_QUESTION_COUNT,\n  QUESTION_COUNT_INCREMENT,\n  MIN_QUESTION_COUNT,\n} from \"../constants\";\n\n// Reducer\n\nconst dispatch: React.Dispatch<Action> = () => {};\n\nconst merge = flip(unflippedMerge);\n\nexport const difficultyToNumber = (difficulty: Difficulty) =>\n  DIFFICULTY.indexOf(difficulty);\n\nexport const reducer: React.Reducer<StoreState, Action> = (\n  state,\n  [actionType, payload],\n) => {\n  const actionMap = {\n    // Quiz State\n    RESET_QUIZ_STATE: merge(initQuizState),\n    ANSWER_QUESTION: evolve({\n      answers: append(payload),\n      currentQuestion: inc,\n    }),\n\n    // Quiz Settings\n    INCREASE_DIFFICULTY: merge({\n      difficulty:\n        DIFFICULTY[\n          difficultyToNumber(state.difficulty) + 1 < DIFFICULTY.length\n            ? difficultyToNumber(state.difficulty) + 1\n            : 0\n        ],\n    }),\n    DECREASE_DIFFICULTY: merge({\n      difficulty:\n        DIFFICULTY[\n          (difficultyToNumber(state.difficulty) > 0\n            ? difficultyToNumber(state.difficulty)\n            : DIFFICULTY.length) - 1\n        ],\n    }),\n    INCREASE_QUESTION_COUNT: merge({\n      questionCount: Math.min(\n        state.questionCount + QUESTION_COUNT_INCREMENT,\n        MAX_QUESTION_COUNT,\n      ),\n      previousQuestionCount: state.questionCount,\n    }),\n    DECREASE_QUESTION_COUNT: merge({\n      questionCount: Math.max(\n        state.questionCount - QUESTION_COUNT_INCREMENT,\n        MIN_QUESTION_COUNT,\n      ),\n      previousQuestionCount: state.questionCount,\n    }),\n\n    // App Settings\n    UPDATE_SETTINGS: evolve({ settings: merge(payload) }),\n\n    // Fetch Questions\n    FETCH_QUESTIONS: merge({ isLoading: true }),\n    FETCH_QUESTIONS_ERROR: merge({\n      isLoading: false,\n      error: payload,\n    }),\n    FETCH_QUESTIONS_SUCCESS: merge({\n      isLoading: false,\n      error: null,\n      questions: payload,\n    }),\n  };\n\n  const actionHandler: (state: StoreState) => StoreState = propOr(\n    always,\n    actionType,\n    actionMap,\n  );\n\n  return actionHandler(state);\n};\n\n// Context & Provider\n\nexport const store = createContext({ state: initState, dispatch });\n\nexport const StoreProvider: React.FC<{ useMocks?: boolean }> = ({\n  useMocks = false,\n  children,\n}) => {\n  const [state, dispatch] = useReducer(\n    reducer,\n    useMocks ? mockState : initState,\n  );\n\n  return (\n    <store.Provider value={{ state, dispatch }}>{children}</store.Provider>\n  );\n};\n","export const colors = {\n  background: \"#2c7ef8\",\n  primary: \"#f3f9ff\",\n  secondary: \"#3b4660\",\n  faded: \"#92bbf8\",\n  grey: \"#54565a\",\n  correct: \"#0e8729\",\n  incorrect: \"#bf0000\",\n};\n","const DEFAULT_FONTS =\n  \"system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif\";\n\nconst fonts = {\n  body: `'Rubik', ${DEFAULT_FONTS}`,\n  heading: `'Rubik', ${DEFAULT_FONTS}`,\n  monospace: \"Menlo, monospace\",\n};\n\nconst fontSizes = [12, 14, 16, 20, 24, 32, 48, 64, 96];\n\nconst fontWeights = {\n  body: 400,\n  heading: 500,\n  light: 300,\n  regular: 400,\n  semi: 500,\n  bold: 700,\n};\n\nexport const typography = {\n  fonts,\n  fontSizes,\n  fontWeights,\n};\n","const buttons = {\n  primary: {\n    borderColor: \"primary\",\n    borderStyle: \"solid\",\n    borderWidth: 3,\n    backgroundColor: \"primary\",\n    borderRadius: 9001,\n    boxShadow: \"default\",\n    color: \"background\",\n    cursor: \"pointer\",\n    fontFamily: \"body\",\n    fontSize: 3,\n    fontWeight: \"semi\",\n    transition: \"background-color .4s, color .2s\",\n    width: \"100%\",\n    \"&:hover\": {\n      backgroundColor: \"background\",\n      color: \"primary\",\n    },\n  },\n  questionCount: {\n    cursor: \"pointer\",\n    backgroundColor: \"background\",\n    position: \"relative\",\n    zIndex: 1,\n  },\n  transparent: {\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    m: 0,\n    p: 0,\n  },\n};\n\nexport const variants = {\n  buttons,\n  content: {\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    p: 3,\n  },\n  footer: {\n    alignSelf: \"center\",\n    width: \"90%\",\n    pb: 2,\n  },\n  header: {\n    alignSelf: \"stretch\",\n    px: 4,\n    py: 5,\n  },\n  wrapper: {\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"column\",\n    maxHeight: \"100vh\",\n  },\n};\n","import { colors } from \"./colors\";\nimport { typography } from \"./typography\";\nimport { variants } from \"./variants\";\n\nconst breakpoints = [\"40em\", \"52em\", \"64em\", \"70em\"];\n\nconst space = [0, 4, 8, 12, 16, 24, 32, 48, 64];\n\nconst shadows = {\n  default: \"0px 1px 1px rgba(0,0,0,0.2)\",\n  hover: \"inset 0px 20px 20px rgba(0,0,0,0.1)\",\n};\n\n// Theme UI spec: https://theme-ui.com/customize\nexport const theme = {\n  breakpoints,\n  colors,\n  shadows,\n  space,\n  ...typography,\n  ...variants,\n};\n","import React, { useContext } from \"react\";\nimport { Flex, Button, Text, SxStyleProp } from \"rebass\";\n\nimport { store } from \"../../../common/state/Store\";\n\nconst buttonStyle: SxStyleProp = {\n  cursor: \"pointer\",\n  mx: 2,\n  p: 0,\n  position: \"relative\",\n  top: \"-2%\",\n};\n\nexport const Difficulty: React.FC = () => {\n  const { state, dispatch } = useContext(store);\n  const { difficulty } = state;\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\">\n      <Button\n        onClick={() => dispatch([\"DECREASE_DIFFICULTY\"])}\n        sx={buttonStyle}\n        variant=\"transparent\"\n      >\n        <Text fontSize={0}>&#x25C0;</Text>\n      </Button>\n      <Text\n        sx={{\n          color: \"primary\",\n          fontFamily: \"body\",\n          fontSize: 3,\n          fontWeight: \"bold\",\n          m: 0,\n          p: 0,\n          textAlign: \"center\",\n          textTransform: \"uppercase\",\n          width: \"5rem\",\n        }}\n      >\n        {difficulty}\n      </Text>\n      <Button\n        onClick={() => dispatch([\"INCREASE_DIFFICULTY\"])}\n        sx={buttonStyle}\n        variant=\"transparent\"\n      >\n        <Text fontSize={0}>&#x25B6;</Text>\n      </Button>\n    </Flex>\n  );\n};\n","import React from \"react\";\n\ntype HtmlProps = { html: string };\n\nexport const Html: React.FC<HtmlProps> = ({ html }: HtmlProps) => (\n  <div dangerouslySetInnerHTML={{ __html: html }} />\n);\n","import React from \"react\";\nimport { Flex, Box, Text } from \"rebass\";\n\ntype ProgressProps = {\n  current: number;\n  total: number;\n  children: React.ReactNode;\n};\n\nexport const Progress: React.FC<ProgressProps> = ({\n  children,\n  current,\n  total,\n}: ProgressProps) => (\n  <Flex flexDirection=\"column\" px={2}>\n    <Flex sx={{ backgroundColor: \"faded\", height: 4, width: \"100%\" }}>\n      <Box\n        sx={{\n          height: 4,\n          backgroundColor: \"primary\",\n        }}\n        width={current / total}\n      ></Box>\n    </Flex>\n    <Text\n      alignSelf=\"center\"\n      fontFamily=\"body\"\n      fontSize={0}\n      fontWeight=\"semi\"\n      mt={2}\n      textAlign=\"right\"\n      color=\"primary\"\n    >\n      {children}\n    </Text>\n  </Flex>\n);\n","import React from \"react\";\n\nimport { colors } from \"../../theme\";\n\ntype Props = {\n  color?: string;\n};\n\nexport const Tick: React.FC<Props> = ({ color = colors.primary }) => (\n  <path\n    d=\"M60.2849 27.0451L34.6712 52.9548L23.7151 42.0523\"\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  />\n);\n\nexport const Cross: React.FC<Props> = ({ color = colors.primary }) => (\n  <>\n    <path\n      d=\"M26.2461 24.4783L57.7537 55.5214\"\n      stroke={color}\n      strokeWidth=\"4\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M26.2461 55.5215L57.7537 24.4783\"\n      stroke={color}\n      strokeWidth=\"4\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </>\n);\n","import React from \"react\";\nimport { keyframes } from \"@emotion/core\";\n\nimport { colors } from \"../../theme\";\nimport styled from \"@emotion/styled\";\n\ntype RingProps = {\n  count?: number;\n  previousCount?: number;\n  total?: number;\n  thickness?: number;\n  spinner?: boolean;\n};\n\nexport const Ring: React.FC<RingProps> = React.memo(\n  ({\n    count = 10,\n    previousCount = 10,\n    total = 10,\n    thickness = 4,\n    spinner = false,\n  }: RingProps) => {\n    const percent = count / total;\n    const previousPercent = previousCount / total;\n\n    const size = 100;\n    const radius = size / 2;\n    const normalizedRadius = radius - thickness * 2;\n    const circumference = normalizedRadius * 2 * Math.PI;\n\n    const offset = circumference - percent * circumference;\n    const previousOffset = circumference - previousPercent * circumference;\n\n    const animation = keyframes`\n    from {\n      stroke-dashoffset: ${previousOffset};\n    }\n    to {\n      stroke-dashoffset: ${offset};\n    }\n  `;\n\n    const Circle = styled(\"circle\")`\n      stroke: ${colors.primary};\n      stroke-dasharray: ${circumference} ${circumference};\n      stroke-dashoffset: ${offset};\n      animation: ${animation} 0.25s ease-in-out;\n      stroke-width: ${thickness};\n      fill: transparent;\n    `;\n\n    return (\n      <svg\n        viewBox={`0 0 ${size} ${size}`}\n        style={{ transform: \"rotate(-180deg)\" }}\n      >\n        <defs>\n          <linearGradient id=\"spinner\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0)\" />\n            <stop offset=\"100%\" stopColor=\"rgba(255,255,255,1)\" />\n          </linearGradient>\n        </defs>\n        <circle\n          stroke={spinner ? \"url(#spinner)\" : colors.faded}\n          strokeDasharray={`${circumference} ${circumference}`}\n          strokeWidth={thickness}\n          fill=\"transparent\"\n          r={normalizedRadius}\n          cx=\"50%\"\n          cy=\"50%\"\n        />\n        {!spinner && <Circle r={normalizedRadius} cx=\"50%\" cy=\"50%\" />}\n      </svg>\n    );\n  },\n);\n","import React from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { keyframes } from \"@emotion/core\";\n\nimport { Ring } from \"../Ring/Ring\";\n\nconst ringSize = 140;\n\nconst fade = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n   }\n`;\n\nconst spin = keyframes`\n  100% {\n    transform: rotate(360deg);\n   }\n`;\n\nexport const Spinner: React.FC = () => (\n  <Flex\n    sx={{\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 99,\n      animation: `${fade} 0.25s ease-in-out`,\n    }}\n  >\n    <Box\n      sx={{\n        height: ringSize,\n        width: ringSize,\n        animation: `${spin} 1s infinite linear`,\n        position: \"relative\",\n        top: 4,\n      }}\n    >\n      <Ring spinner />\n    </Box>\n  </Flex>\n);\n","import React, { useContext } from \"react\";\nimport { Flex, Button, Box, Text } from \"rebass\";\n\nimport { store } from \"../../../common/state/Store\";\nimport { Ring } from \"../../../common/components\";\nimport { MAX_QUESTION_COUNT } from \"../../../common/constants\";\n\nexport const QuestionCount = () => {\n  const { state, dispatch } = useContext(store);\n  const { questionCount, previousQuestionCount } = state;\n\n  const buttonSize = 40;\n  const ringSize = 140;\n  const offset = ringSize / 4.5;\n\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" my={2}>\n      <Button\n        variant=\"questionCount\"\n        onClick={() => dispatch([\"DECREASE_QUESTION_COUNT\"])}\n        sx={{ height: buttonSize, width: buttonSize, right: -offset }}\n      >\n        <Text fontWeight=\"bold\" fontSize={3}>\n          -\n        </Text>\n      </Button>\n      <Box sx={{ position: \"relative\", height: ringSize, width: ringSize }}>\n        <Box flex={1}>\n          <Ring\n            count={questionCount}\n            previousCount={previousQuestionCount}\n            total={MAX_QUESTION_COUNT}\n          />\n        </Box>\n        <Flex\n          sx={{\n            alignItems: \"center\",\n            bottom: 0,\n            flex: 1,\n            justifyContent: \"center\",\n            left: 0,\n            position: \"absolute\",\n            right: 0,\n            top: 0,\n          }}\n        >\n          <Text fontFamily=\"body\" fontSize={6} color=\"primary\">\n            {questionCount}\n          </Text>\n        </Flex>\n      </Box>\n      <Button\n        onClick={() => dispatch([\"INCREASE_QUESTION_COUNT\"])}\n        variant=\"questionCount\"\n        sx={{ height: buttonSize, width: buttonSize, left: -offset }}\n      >\n        <Text fontWeight=\"bold\" fontSize={3}>\n          +\n        </Text>\n      </Button>\n    </Flex>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Flex, Button, Box, Text, Heading, SxStyleProp } from \"rebass\";\n\nimport { Difficulty } from \"./Difficulty/Difficulty\";\nimport { QuestionCount } from \"./QuestionCount/QuestionCount\";\nimport { store } from \"../../common/state/Store\";\n\nconst appNameStyles: SxStyleProp = {\n  color: \"primary\",\n  fontSize: 5,\n  fontWeight: \"bold\",\n  mb: -2,\n  textAlign: \"center\",\n  textShadow: \"default\",\n};\n\nexport const Home: React.FC = () => {\n  const { state, dispatch } = useContext(store);\n\n  if (state.questions.length) dispatch([\"RESET_QUIZ_STATE\"]);\n\n  const { questionCount, difficulty } = state;\n\n  return (\n    <Flex variant=\"wrapper\">\n      <Box variant=\"header\" mt={5}>\n        <Heading sx={appNameStyles}>LET'S GET</Heading>\n        <Heading sx={appNameStyles} fontSize={6}>\n          QUiZZ!CAL\n        </Heading>\n      </Box>\n      <Flex variant=\"content\">\n        <Box flex={1} />\n        <Flex alignItems=\"center\" flexDirection=\"column\">\n          <Text color=\"primary\" fontFamily=\"body\" fontWeight=\"bold\">\n            QUESTION SETTINGS\n          </Text>\n          <QuestionCount />\n          <Difficulty />\n        </Flex>\n        <Flex flex={1} justifyContent=\"center\" flexDirection=\"column\">\n          <Text\n            fontFamily=\"body\"\n            fontSize={2}\n            m={5}\n            mb={0}\n            textAlign=\"center\"\n            color=\"primary\"\n          >\n            You will be presented with {questionCount}\n            <br />\n            {difficulty.toUpperCase()} True or False questions\n          </Text>\n        </Flex>\n      </Flex>\n      <Box variant=\"footer\">\n        <Link to=\"/quiz\">\n          <Button p={5}>PLAY!</Button>\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n","import React from \"react\";\n\nimport { Tick, Cross } from \"../../../common/components\";\nimport { colors } from \"../../../common/theme\";\n\nconst AnswerButton: React.FC = ({ children }) => (\n  <svg viewBox=\"0 0 84 84\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g filter=\"url(#filter0_d)\">\n      <circle cx=\"42\" cy=\"40\" r=\"38\" stroke={colors.primary} strokeWidth=\"4\" />\n    </g>\n    {children}\n    <defs>\n      <filter\n        id=\"filter0_d\"\n        x=\"0\"\n        y=\"0\"\n        width=\"84\"\n        height=\"84\"\n        filterUnits=\"userSpaceOnUse\"\n        colorInterpolationFilters=\"sRGB\"\n      >\n        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n        <feColorMatrix\n          in=\"SourceAlpha\"\n          type=\"matrix\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n        />\n        <feOffset dy=\"2\" />\n        <feGaussianBlur stdDeviation=\"1\" />\n        <feColorMatrix\n          type=\"matrix\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0\"\n        />\n        <feBlend\n          mode=\"normal\"\n          in2=\"BackgroundImageFix\"\n          result=\"effect1_dropShadow\"\n        />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"effect1_dropShadow\"\n          result=\"shape\"\n        />\n      </filter>\n    </defs>\n  </svg>\n);\n\nexport const TrueButton = () => (\n  <AnswerButton>\n    <Tick />\n  </AnswerButton>\n);\n\nexport const FalseButton = () => (\n  <AnswerButton>\n    <Cross />\n  </AnswerButton>\n);\n","import React, { useContext } from \"react\";\nimport { Flex, Button, Box, Text, Heading } from \"rebass\";\n\nimport { FalseButton, TrueButton } from \"../AnswerButton/AnswerButton\";\nimport { store } from \"../../../common/state/Store\";\nimport { Html, Progress } from \"../../../common/components\";\n\nexport const Question: React.FC = () => {\n  const { state, dispatch } = useContext(store);\n  const { currentQuestion: current, questions } = state;\n\n  const { category, question } = questions[current];\n  const total = questions.length;\n\n  return (\n    <Flex flexDirection=\"column\" flex={1}>\n      <Box variant=\"header\">\n        <Heading fontSize={2} textAlign=\"center\" mb={2} color=\"primary\">\n          {category}\n        </Heading>\n        <Progress\n          current={current}\n          total={total}\n          children={`${current}/${total}`}\n        />\n      </Box>\n      <Box variant=\"content\">\n        <Flex flex={1} m={4}>\n          <Text\n            sx={{\n              fontFamily: \"body\",\n              color: \"primary\",\n              fontSize: [4, 5],\n              hyphens: \"auto\",\n              overflowWrap: \"break-word\",\n            }}\n          >\n            <Html html={question} />\n          </Text>\n        </Flex>\n      </Box>\n      <Flex variant=\"footer\" justifyContent=\"space-between\">\n        <Button\n          variant=\"transparent\"\n          onClick={() => dispatch([\"ANSWER_QUESTION\", \"True\"])}\n        >\n          <Box width={80}>\n            <TrueButton />\n          </Box>\n        </Button>\n        <Button\n          variant=\"transparent\"\n          onClick={() => dispatch([\"ANSWER_QUESTION\", \"False\"])}\n        >\n          <Box width={80}>\n            <FalseButton />\n          </Box>\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Flex, Box, Text } from \"rebass\";\n\nimport { TrueButton, FalseButton } from \"../AnswerButton/AnswerButton\";\nimport { Html } from \"../../../common/components\";\nimport { QuestionResult } from \"../../../common/constants\";\n\nexport const Result: React.FC<QuestionResult> = ({\n  question,\n  is_correct,\n  given_answer,\n  correct_answer,\n}) => (\n  <Flex p={2} m=\"auto\" width=\"100%\">\n    <Box width={32} mr={3} alignSelf=\"center\">\n      {is_correct ? <TrueButton /> : <FalseButton />}\n    </Box>\n    <Flex flex={1} flexDirection=\"column\" justifyContent=\"space-between\" my={3}>\n      <Box flex={1}>\n        <Text fontFamily=\"body\" color=\"primary\">\n          <Html html={question} />\n        </Text>\n      </Box>\n      <Box mt={1}>\n        <Text\n          sx={{\n            color: \"primary\",\n            fontFamily: \"body\",\n            fontSize: 0,\n            textTransform: \"uppercase\",\n          }}\n        >\n          {is_correct ? \"Your\" : \"Correct\"} Answer:{\" \"}\n          <strong>{is_correct ? given_answer : correct_answer}</strong>\n        </Text>\n      </Box>\n    </Flex>\n  </Flex>\n);\n","import { zipWith } from \"ramda\";\n\nimport { Answer, Question, QuestionResult } from \"../../common/constants\";\n\nconst checkAnswer = (question: Question, answer: Answer): QuestionResult => ({\n  ...question,\n  given_answer: answer,\n  is_correct: question.correct_answer === answer,\n});\n\nexport const toResults = (questions: Question[], answers: Answer[]) =>\n  zipWith(checkAnswer, questions, answers);\n","import React, { useContext } from \"react\";\nimport { Flex, Button, Box, Heading } from \"rebass\";\nimport * as hex2rgb from \"hex2rgb\";\n\nimport { Result } from \"./Result\";\nimport { toResults } from \"../quizUtils\";\nimport { Progress } from \"../../../common/components\";\nimport { QuestionResult } from \"../../../common/constants\";\nimport { store } from \"../../../common/state/Store\";\nimport { colors } from \"../../../common/theme\";\n\nexport const Results: React.FC = () => {\n  const {\n    state: { questions, answers },\n    dispatch,\n  } = useContext(store);\n\n  const results = toResults(questions, answers);\n  const score = results.filter((result: QuestionResult) => result.is_correct)\n    .length;\n  const total = questions.length;\n\n  return (\n    <Flex variant=\"wrapper\">\n      <Box variant=\"header\" sx={{ position: \"relative\" }}>\n        <Heading fontSize={3} textAlign=\"center\" mb={2} color=\"primary\">\n          {score / total >= 0.5 ? \"WELL DONE\" : \"BETTER LUCK NEXT TIME\"}!\n        </Heading>\n        <Progress current={score} total={total}>\n          <>\n            YOU ANSWERED{\" \"}\n            <strong>\n              {score}/{total}\n            </strong>{\" \"}\n            QUESTIONS CORRECTLY\n          </>\n        </Progress>\n        <Fade />\n      </Box>\n      <Flex flexDirection=\"column\" overflowY=\"scroll\" mx={[4, 4, 8]}>\n        {results.map((result: QuestionResult, i: number) => (\n          <Result key={i} {...result} />\n        ))}\n      </Flex>\n      <Box variant=\"footer\" sx={{ position: \"relative\" }}>\n        <Fade flip />\n        <Button onClick={() => dispatch([\"RESET_QUIZ_STATE\"])} p={5}>\n          Play Again?\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n\nconst FADE_HEIGHT = 50;\n\nconst toRgba = (hex: string, alpha: number): string => {\n  const [r, g, b] = hex2rgb(hex).rgb;\n  return `rgba(${r},${g},${b},${alpha})`;\n};\n\nconst Fade: React.FC<{ flip?: boolean }> = ({ flip }) => (\n  <Box\n    sx={{\n      background: `linear-gradient(${flip ? 180 : 0}deg, ${toRgba(\n        colors.background,\n        0,\n      )} 0%, ${toRgba(colors.background, 1)} 100%)`,\n      bottom: flip ? \"initial\" : -FADE_HEIGHT,\n      top: flip ? -FADE_HEIGHT : \"initial\",\n      height: FADE_HEIGHT,\n      position: \"absolute\",\n      flex: 1,\n      width: \"100%\",\n    }}\n  />\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Flex, SxStyleProp } from \"rebass\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"theme-ui\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StoreProvider } from \"./common/state/Store\";\nimport { theme } from \"./common/theme\";\n\nimport { Home } from \"./features/home/Home.view\";\nimport { Quiz } from \"./features/quiz/Quiz.view\";\n\nconst styles: { [key: string]: SxStyleProp } = {\n  inner: {\n    flex: \"1\",\n    height: \"100%\",\n    m: \"0 auto\",\n    maxHeight: \"50em\",\n    maxWidth: [\"initial\", \"75%\", \"50em\"],\n    minWidth: \"20em\",\n  },\n  outer: {\n    alignItems: \"center\",\n    bottom: 0,\n    left: 0,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n  },\n};\n\nReactDOM.render(\n  <Flex sx={styles.outer}>\n    <Flex sx={styles.inner}>\n      <ThemeProvider theme={theme}>\n        <StoreProvider>\n          <Router>\n            <Switch>\n              <Route path=\"/quiz\">\n                <Quiz />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </StoreProvider>\n      </ThemeProvider>\n    </Flex>\n  </Flex>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useContext, useEffect } from \"react\";\nimport { Flex } from \"rebass\";\n\nimport { Question } from \"./Question/Question\";\nimport { Results } from \"./Results/Results\";\nimport { store } from \"../../common/state/Store\";\nimport { Spinner } from \"../../common/components\";\n\nexport const Quiz: React.FC = () => {\n  const { state, dispatch } = useContext(store);\n  const { questionCount, difficulty, currentQuestion, questions } = state;\n\n  const loadQuestions = () =>\n    fetch(\n      `https://opentdb.com/api.php?amount=${questionCount}&difficulty=${difficulty}&type=boolean`,\n    )\n      .then(res => res.json())\n      .then(data => dispatch([\"FETCH_QUESTIONS_SUCCESS\", data.results]))\n      .catch(err => dispatch([\"FETCH_QUESTIONS_ERROR\", err]));\n\n  useEffect(() => {\n    if (!questions.length) loadQuestions();\n  });\n\n  if (!questions.length) return <Spinner />;\n\n  return (\n    <Flex flex={1}>\n      {currentQuestion === questions.length ? <Results /> : <Question />}\n    </Flex>\n  );\n};\n"],"sourceRoot":""}